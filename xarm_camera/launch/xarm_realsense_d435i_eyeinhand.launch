<launch>
  <arg name="robot_ip" />
  <arg name="dof" default="7" />
  <arg name="report_type" default="normal" />

  <arg name="add_other_geometry" default="false"/>
  <arg name="geometry_type" default="box"/>
  <arg name="geometry_mass" default="0.1"/>
  <arg name="geometry_height" default="0.1"/>
  <arg name="geometry_radius" default="0.1"/>
  <arg name="geometry_length" default="0.1"/>
  <arg name="geometry_width" default="0.1"/>
  <arg name="geometry_mesh_filename" default=""/>
  <arg name="geometry_mesh_origin_xyz" default="'0 0 0'"/>
  <arg name="geometry_mesh_origin_rpy" default="'0 0 0'"/>
  <arg name="geometry_mesh_tcp_xyz" default="'0 0 0'"/>
  <arg name="geometry_mesh_tcp_rpy" default="'0 0 0'"/>

  <arg if="$(eval arg('dof') == 5)" name="moveit_launch_file" value="$(find xarm5_moveit_config)/launch/realMove_exec.launch" />
  <arg if="$(eval arg('dof') == 6)" name="moveit_launch_file" value="$(find xarm6_moveit_config)/launch/realMove_exec.launch" />
  <arg if="$(eval arg('dof') == 7)" name="moveit_launch_file" value="$(find xarm7_moveit_config)/launch/realMove_exec.launch" />

  <include file="$(arg moveit_launch_file)">
    <arg name="robot_ip" value="$(arg robot_ip)" />
    <arg name="report_type" value="$(arg report_type)" />
    <arg name="show_rviz" value="false" />

    <arg name="add_other_geometry" default="$(arg add_other_geometry)"/>
    <arg name="geometry_type" default="$(arg geometry_type)"/>
    <arg name="geometry_mass" default="$(arg geometry_mass)"/>
    <arg name="geometry_height" default="$(arg geometry_height)"/>
    <arg name="geometry_radius" default="$(arg geometry_radius)"/>
    <arg name="geometry_length" default="$(arg geometry_length)"/>
    <arg name="geometry_width" default="$(arg geometry_width)"/>
    <arg name="geometry_mesh_filename" default="$(arg geometry_mesh_filename)"/>
    <arg name="geometry_mesh_origin_xyz" default="$(arg geometry_mesh_origin_xyz)"/>
    <arg name="geometry_mesh_origin_rpy" default="$(arg geometry_mesh_origin_rpy)"/>
    <arg name="geometry_mesh_tcp_xyz" default="$(arg geometry_mesh_tcp_xyz)"/>
    <arg name="geometry_mesh_tcp_rpy" default="$(arg geometry_mesh_tcp_rpy)"/>
  </include>

  <!-- (start your tracking system's ROS driver) -->
  <include file="$(find realsense2_camera)/launch/rs_camera.launch">
    <arg name="initial_reset" value="true"/>
  </include>     

  <!-- fill in the following parameters according to your tracking system -->
  <arg name="markerId"        default="555"/>      <!-- set your marker id -->
  <arg name="markerSize"      default="0.07"/>    <!-- in m -->
  <arg name="eye"             default="left"/>
  <arg name="marker_frame"    default="camera_marker"/> 
  <arg name="ref_frame"       default="camera_color_frame"/>  <!-- leave empty and the pose will be published wrt param parent_name -->
  <arg name="corner_refinement" default="LINES" /> <!-- NONE, HARRIS, LINES, SUBPIX -->    
  <arg name="camera_frame" default="camera_color_frame" />
  <arg name="camera_image_topic" default="/camera/color/image_raw" />
  <arg name="camera_info_topic" default="/camera/color/camera_info" /> 

  <node pkg="aruco_ros" type="single" name="aruco_single">
    <remap to="$(arg camera_info_topic)" from="/camera_info" />
    <remap to="$(arg camera_image_topic)" from="/image" />
    <param name="image_is_rectified" value="true"/>
    <param name="marker_size"        value="$(arg markerSize)"/>
    <param name="marker_id"          value="$(arg markerId)"/>
    <param name="reference_frame"    value="$(arg ref_frame)"/>   <!-- frame in which the marker pose will be refered -->
    <param name="camera_frame"       value="$(arg camera_frame)"/>
    <param name="marker_frame"       value="$(arg marker_frame)" />
    <!-- <param name="corner_refinement"  value="$(arg corner_refinement)" /> -->
  </node>

  <arg name="namespace_prefix" default="xarm_eoh_calib"/>
  <!-- (start hand-eye-calibration) -->
  <include file="$(find easy_handeye)/launch/calibrate.launch">
    <arg name="eye_on_hand" value="true"/>
    <arg name="namespace_prefix" value="$(arg namespace_prefix)"/>
    <arg name="move_group" value="xarm$(arg dof)"  doc="the name of move_group for the automatic robot motion with MoveIt!" />
    <arg name="freehand_robot_movement" value="false"/>

    <!-- fill in the following parameters according to your robot's published tf frames -->
    <arg name="robot_base_frame" value="link_base"/>
    <arg name="robot_effector_frame" value="link_eef"/>

    <!-- fill in the following parameters according to your tracking system's published tf frames -->
    <arg name="tracking_base_frame" value="$(arg camera_frame)"/>
    <arg name="tracking_marker_frame" value="$(arg marker_frame)"/>

    <arg name="robot_velocity_scaling" value="0.5" />
    <arg name="robot_acceleration_scaling" value="0.2" />
  </include>


</launch>